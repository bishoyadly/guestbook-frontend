{"version":3,"sources":["components/MessageList/MessageList.module.scss","components/Signup/Signup.module.scss","components/Login/Login.js","apis/apis.js","Auth/auth.js","components/Signup/Signup.js","components/MessageList/MessageList.js","components/bookForm/BookForm.js","components/privateRoute/PrivateRoute.js","App.js","serviceWorker.js","index.js","components/Login/Login.module.scss","components/bookForm/BookForm.module.scss"],"names":["module","exports","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","AuthObj","history","useHistory","from","useLocation","state","pathname","process","className","loginStyles","loginContainer","signInHeader","loginForm","name","initialValues","remember","onFinish","values","authenticate","email","password","replace","onFinishFailed","errorInfo","console","log","Item","label","rules","required","message","placeholder","inputField","Password","submitButton","type","htmlType","signUpLink","to","getAxiosInstance","accessToken","localStorage","getItem","axios","create","baseURL","headers","updateMessage","messageObj","put","window","authObj","JSON","parse","isAuthenticated","value","cb","loginObj","post","login","then","response","data","token","setItem","stringify","catch","error","signout","SignUp","signUpStyles","userObj","signUp","logInLink","MessageList","addMessageModalVisibility","useState","messageList","setMessageList","replyModalVisibility","setReplyModalVisibility","replyModalLoading","setReplyModalLoading","replyMessageText","setReplyMessageText","messageText","setMessageText","currentMessageObj","setCurrentMessageObj","listChange","setListChange","onAddReplyMessageOK","replyMessages","push","handleReplyModalCancel","onDeleteMessage","messageId","delete","deleteMessage","success","messageItem","key","_id","messageListStyles","listItem","Group","compact","onChange","event","target","style","width","defaultValue","onClick","newMessageObj","onEditMessage","EditOutlined","PlusCircleOutlined","CloseCircleOutlined","arr","i","length","item","Text","replyMessagesList","useEffect","get","dataSource","renderItem","title","visible","onOk","confirmLoading","onCancel","BookForm","setAddMessageModalVisibility","addMessageModalLoading","setAddMessageModalLoading","onAddMessageOK","addMessage","handleAddMessageModalCancel","bookFormStyles","bookFormContainer","headerTitle","signOutButton","addMessageButton","PrivateRoute","children","rest","render","location","App","path","exact","background","fontSize","borderRadius","padding","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4c272ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"MessageList_listItem__3tAp-\",\"replyMessages\":\"MessageList_replyMessages__wmUvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Signup_loginContainer__1PE8x\",\"signInHeader\":\"Signup_signInHeader__2X5et\",\"loginForm\":\"Signup_loginForm__2GrOs\",\"inputField\":\"Signup_inputField__2E_PP\",\"submitButton\":\"Signup_submitButton__24kBL\",\"logInLink\":\"Signup_logInLink__30QUv\"};","import React from \"react\";\nimport loginStyles from './Login.module.scss';\nimport {Form, Input, Button} from \"antd\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\n\nconst baseURL = process.env.REACT_APP_BaseURL;\nconst layout = {\n    labelCol: {\n        span: 0,\n    },\n    wrapperCol: {\n        span: 20,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 0,\n        span: 20,\n    },\n};\n\nexport default function Login({AuthObj}) {\n\n    const history = useHistory();\n    const location = useLocation();\n    const {from} = location.state || {from: {pathname: `${baseURL}/guestBook`}};\n\n    const onFinish = values => {\n        AuthObj.authenticate(values.email, values.password, () => {\n            history.replace(from);\n        });\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div className={loginStyles.loginContainer}>\n            <h1 className={loginStyles.signInHeader}> Sign in </h1>\n\n            <Form\n                {...layout}\n                className={loginStyles.loginForm}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Email address\"\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your email address!',\n                        },\n                    ]}\n                >\n                    <Input\n                        placeholder={'Email Address'}\n                        className={loginStyles.inputField}\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                >\n                    <Input.Password\n                        placeholder={'Password'}\n                        className={loginStyles.inputField}\n                    />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button\n                        className={loginStyles.submitButton}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                    >\n                        Login\n                    </Button>\n                </Form.Item>\n            </Form>\n\n            <Link\n                className={loginStyles.signUpLink}\n                to={`/${process.env.REACT_APP_BaseURL}/signup`}\n            >\n                Sign up\n            </Link>\n        </div>\n    );\n}","import axios from 'axios';\n\nexport function getAxiosInstance() {\n    const accessToken = localStorage.getItem('accessToken');\n    return axios.create({\n        baseURL: process.env.REACT_APP_BACKEND_URL,\n        headers: {\n            'Authorization': `Bearer ${accessToken}`\n        },\n    });\n}\n\nexport function login(loginObj) {\n    return getAxiosInstance().post(`${process.env.REACT_APP_BACKEND_URL}/login`, loginObj);\n}\n\nexport function logout() {\n    return getAxiosInstance().post(`${process.env.REACT_APP_BACKEND_URL}/logout`);\n}\n\nexport function signUp(userObj) {\n    return getAxiosInstance().post(`${process.env.REACT_APP_BACKEND_URL}/users`, userObj);\n}\n\nexport function getMessages() {\n    return getAxiosInstance().get(`${process.env.REACT_APP_BACKEND_URL}/messages`);\n}\n\nexport function addMessage(messageText) {\n    return getAxiosInstance()\n        .post(`${process.env.REACT_APP_BACKEND_URL}/messages/`, {\n            messageText\n        });\n}\n\nexport function updateMessage(messageObj) {\n    return getAxiosInstance()\n        .put(`${process.env.REACT_APP_BACKEND_URL}/messages`, messageObj);\n}\n\nexport function deleteMessage(messageId) {\n    return getAxiosInstance()\n        .delete(`${process.env.REACT_APP_BACKEND_URL}/messages/${messageId}`);\n}\n\n","import {login, logout} from \"../apis/apis\";\nimport {message} from \"antd\";\n\nconst localStorage = window.localStorage;\nconst authObj = JSON.parse(localStorage.getItem('isAuthenticated'));\nconst isAuthenticated = authObj && authObj.value;\n\nexport const AuthObj = {\n    isAuthenticated: isAuthenticated,\n    authenticate(email, password, cb) {\n        const loginObj = {\n            email: email,\n            password: password\n        };\n        login(loginObj)\n            .then((response) => {\n                const accessToken = response.data.token || '';\n                AuthObj.isAuthenticated = true;\n                localStorage.setItem('isAuthenticated', JSON.stringify({\n                    value: true\n                }));\n                localStorage.setItem('accessToken', accessToken);\n                cb();\n            })\n            .catch(() => {\n                message.error('Invalid Email or Password');\n            })\n\n    },\n    signout(cb) {\n        logout().then(() => {\n            AuthObj.isAuthenticated = false;\n            localStorage.setItem('isAuthenticated', JSON.stringify({\n                value: false\n            }));\n            localStorage.setItem('accessToken', '');\n            cb();\n        });\n    }\n};","import React from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport signUpStyles from './Signup.module.scss';\nimport {Form, Input, Button} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {signUp} from \"../../apis/apis\";\nimport {AuthObj} from \"../../Auth/auth\";\n\nconst baseURL = process.env.REACT_APP_BaseURL;\nconst layout = {\n    labelCol: {\n        span: 4,\n    },\n    wrapperCol: {\n        span: 10,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 0,\n        span: 20,\n    },\n};\n\nexport default function SignUp() {\n    const history = useHistory();\n    const location = useLocation();\n    const {from} = location.state || {from: {pathname: `/${baseURL}/guestBook`}};\n\n    const onFinish = values => {\n        const userObj = {...values};\n        signUp(userObj).then(() => {\n            AuthObj.authenticate(values.email, values.password, () => {\n                history.replace(from);\n            });\n        });\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div className={signUpStyles.loginContainer}>\n            <h1 className={signUpStyles.signInHeader}> Create New Account </h1>\n\n            <Form\n                {...layout}\n                className={signUpStyles.loginForm}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n\n                <Form.Item\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your first name!',\n                        },\n                    ]}\n                >\n                    <Input\n                        placeholder={'First Name'}\n                        className={signUpStyles.inputField}\n                    />\n                </Form.Item>\n\n\n                <Form.Item\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your last name!',\n                        },\n                    ]}\n                >\n                    <Input\n                        placeholder={'Last Name'}\n                        className={signUpStyles.inputField}\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email address\"\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your email address!',\n                        },\n                    ]}\n                >\n                    <Input\n                        placeholder={'Email Address'}\n                        className={signUpStyles.inputField}\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                >\n                    <Input.Password\n                        placeholder={'Password'}\n                        className={signUpStyles.inputField}\n                    />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button\n                        className={signUpStyles.submitButton}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                    >\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n\n            <Link\n                className={signUpStyles.logInLink}\n                to={`/${process.env.REACT_APP_BaseURL}/login`}\n            >\n                Login\n            </Link>\n        </div>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport {Button, Input, List, Modal, Typography} from \"antd\";\nimport messageListStyles from './MessageList.module.scss';\nimport {CloseCircleOutlined, EditOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\nimport {deleteMessage, getMessages, updateMessage} from \"../../apis/apis\";\nimport {message} from \"antd\";\n\nexport default function MessageList({addMessageModalVisibility}) {\n\n    const [messageList, setMessageList] = useState([]);\n    const [replyModalVisibility, setReplyModalVisibility] = useState(false);\n    const [replyModalLoading, setReplyModalLoading] = useState(false);\n    const [replyMessageText, setReplyMessageText] = useState('');\n    const [messageText, setMessageText] = useState('');\n    const [currentMessageObj, setCurrentMessageObj] = useState({});\n    const [listChange, setListChange] = useState(false);\n\n    useEffect(() => {\n        getMessages().then(response => {\n            setMessageList(response.data);\n        })\n    }, [replyModalVisibility, addMessageModalVisibility, listChange]);\n\n    function onAddReplyMessageOK() {\n        setReplyModalLoading(true);\n        currentMessageObj.replyMessages.push(replyMessageText);\n        updateMessage(currentMessageObj)\n            .then(() => {\n                setReplyModalVisibility(false);\n                setReplyModalLoading(false);\n            })\n            .catch(() => {\n                setReplyModalVisibility(false);\n                setReplyModalLoading(false);\n            });\n    }\n\n    function showReplyModal() {\n        setReplyModalVisibility(true);\n    }\n\n    function handleReplyModalCancel() {\n        setReplyModalVisibility(false);\n    }\n\n    function replyMessageModal() {\n        return (\n            <div>\n                <Modal\n                    title=\"Reply Message \"\n                    visible={replyModalVisibility}\n                    onOk={onAddReplyMessageOK}\n                    confirmLoading={replyModalLoading}\n                    onCancel={handleReplyModalCancel}\n                >\n                    <Input\n                        onChange={(event) => setReplyMessageText(event.target.value)}\n                        placeholder={'reply message'}\n                    />\n                </Modal>\n            </div>\n        );\n    }\n\n    function replyMessagesList(replyMessages) {\n        const arr = [];\n        for (let i = 0; i < replyMessages.length; i++) {\n            const item = <Typography.Text\n                key={i}\n                className={messageListStyles.replyMessages}\n            >\n                {replyMessages[i]}\n            </Typography.Text>;\n            arr.push(item);\n        }\n        return arr;\n    }\n\n    function onEditMessage(messageObj) {\n        const newMessageObj = {...messageObj};\n        newMessageObj.messageText = messageText || newMessageObj.messageText;\n        updateMessage(newMessageObj)\n            .then(() => {\n                message.success('Message edited successfully');\n            })\n            .catch(() => {\n                message.error('Edit Failed');\n            });\n    }\n\n    function onDeleteMessage(messageId) {\n        setListChange(!listChange);\n        deleteMessage(messageId)\n            .then(() => {\n                message.success('Message deleted successfully');\n            })\n            .catch(() => {\n                message.error('Deletion Failed');\n            });\n    }\n\n    function messageItem(messageObj) {\n        return (\n            <List.Item\n                key={messageObj._id}\n                className={messageListStyles.listItem}\n            >\n                <Input.Group compact>\n                    <Input\n                        onChange={(event) => {\n                            setMessageText(event.target.value);\n                        }}\n                        placeholder={'message text'}\n                        style={{width: '80%'}}\n                        defaultValue={messageObj.messageText}\n                    />\n                    <Button\n                        onClick={() => {\n                            onEditMessage(messageObj);\n                        }}>\n                        <EditOutlined/>\n                    </Button>\n                    <Button onClick={() => {\n                        setCurrentMessageObj(messageObj);\n                        showReplyModal();\n                    }}>\n                        <PlusCircleOutlined/>\n                    </Button>\n                    <Button\n                        onClick={() => onDeleteMessage(messageObj._id)}\n                    >\n                        <CloseCircleOutlined/>\n                    </Button>\n                </Input.Group>\n                {replyMessagesList(messageObj.replyMessages)}\n            </List.Item>\n        )\n    }\n\n    return (\n        <div>\n            <List\n                dataSource={messageList}\n                renderItem={messageObj => messageItem(messageObj)}\n            />\n            {replyMessageModal()}\n        </div>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport bookFormStyles from './BookForm.module.scss';\nimport {Input, Button, Modal} from \"antd\";\nimport MessageList from \"../MessageList/MessageList\";\nimport {useHistory} from 'react-router-dom';\nimport {addMessage} from \"../../apis/apis\";\n\nconst baseURL = process.env.REACT_APP_BaseURL;\nexport default function BookForm({AuthObj}) {\n\n    const history = useHistory();\n    const [addMessageModalVisibility, setAddMessageModalVisibility] = useState(false);\n    const [addMessageModalLoading, setAddMessageModalLoading] = useState(false);\n    const [messageText, setMessageText] = useState('');\n\n    function onAddMessageOK() {\n        setAddMessageModalLoading(true);\n        addMessage(messageText)\n            .then(() => {\n                setAddMessageModalLoading(false);\n                setAddMessageModalVisibility(false);\n            })\n            .catch(() => {\n                setAddMessageModalLoading(false);\n                setAddMessageModalVisibility(false);\n            });\n    }\n\n    function showAddMessageModal() {\n        setAddMessageModalVisibility(true);\n    }\n\n    function handleAddMessageModalCancel() {\n        setAddMessageModalVisibility(false);\n    }\n\n    function addMessageModal() {\n        return (\n            <div>\n                <Modal\n                    title=\"Add New Message \"\n                    visible={addMessageModalVisibility}\n                    onOk={onAddMessageOK}\n                    confirmLoading={addMessageModalLoading}\n                    onCancel={handleAddMessageModalCancel}\n                >\n                    <Input\n                        onChange={event => setMessageText(event.target.value)}\n                        placeholder={'message text'}/>\n                </Modal>\n            </div>\n        );\n    }\n\n    function signOut() {\n        AuthObj.signout(() => history.push(`/${baseURL}`));\n    }\n\n    return (\n        <div className={bookFormStyles.bookFormContainer}>\n            <div className={bookFormStyles.headerTitle}>\n                <h1\n                > Guest Book Messages\n                </h1>\n                <Button\n                    onClick={signOut}\n                    className={bookFormStyles.signOutButton}\n                    type=\"danger\"\n                >\n                    Sign out\n                </Button>\n            </div>\n            <Button\n                onClick={showAddMessageModal}\n                className={bookFormStyles.addMessageButton}\n                type=\"primary\"\n            >\n                Add New Message\n            </Button>\n            <MessageList\n                addMessageModalVisibility={addMessageModalVisibility}\n            />\n            {addMessageModal()}\n        </div>\n    )\n}","import React from \"react\";\nimport {Route,Redirect} from \"react-router-dom\";\n\nexport default function PrivateRoute({children, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                rest.AuthObj.isAuthenticated ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Login from \"./components/Login/Login\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport SignUp from \"./components/Signup/Signup\";\nimport BookForm from \"./components/bookForm/BookForm\";\nimport PrivateRoute from \"./components/privateRoute/PrivateRoute\";\nimport {AuthObj} from \"./Auth/auth\";\n\nconst baseURL = process.env.REACT_APP_BaseURL;\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path={`/${baseURL}/login`}>\n                        <Login AuthObj={AuthObj}/>\n                    </Route>\n                    <Route exact path={`/${baseURL}/`}>\n                        <Login AuthObj={AuthObj}/>\n                    </Route>\n                    <Route path={`/${baseURL}/signup`}>\n                        <SignUp/>\n                    </Route>\n                    <PrivateRoute\n                        AuthObj={AuthObj}\n                        path={`/${baseURL}/guestBook`}\n                    >\n                        <BookForm AuthObj={AuthObj}/>\n                    </PrivateRoute>\n                    <Route>\n                        <h1 style={{\n                            background: 'white',\n                            fontSize: '100px',\n                            borderRadius: '50px',\n                            padding: '100px'\n                        }}>Not Found</h1>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3Scu4\",\"signInHeader\":\"Login_signInHeader__XOfca\",\"loginForm\":\"Login_loginForm__32H5B\",\"inputField\":\"Login_inputField__2pWCd\",\"submitButton\":\"Login_submitButton__sPrWP\",\"signUpLink\":\"Login_signUpLink__3-Pyy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookFormContainer\":\"BookForm_bookFormContainer__3OZXD\",\"headerTitle\":\"BookForm_headerTitle__3f_Mw\",\"signOutButton\":\"BookForm_signOutButton__1kzce\",\"addMessageButton\":\"BookForm_addMessageButton__QTq-F\"};"],"sourceRoot":""}